#ifndef KD_UNIPLAYERSDK_H
#define KD_UNIPLAYERSDK_H
#include "kddef.h"

#ifdef	__cplusplus
extern "C" {
#endif

/************ 一。系统操作部分 ************/
/******************************************************************************
函 数 名：	PLAYKD_Startup
功	  能：	全局变量的初始化，与解码器ID无关，必须释放所有解码器后调用,应该在调用所有的kdSDK 接口之前调用这个方法,建议在主
			线程创建其他线程之前调用
参	  数： 
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL PLAYKD_Startup();

/******************************************************************************
函 数 名：	PLAYKD_Cleanup
功	  能：	全局变量的释放，与解码器ID无关，必须释放所有解码器后调用,不再允许KDSDK调用其他方法，建议
			在除了主线程以外的其他线程退出之外调用	
参	  数： 
返 回 值：	
说    明: 该接口LINUX下不可调用，原因:调用该接口后多次调用PLAYKD_Startup会导致XOpenDisplay报错:Maximum number of clients reached.
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	void PLAYKD_Cleanup();

#if defined(ANDROID)||defined(__ANDROID__)
/******************************************************************************
函 数 名：	EarlyInitAndroidObject
功	  能：	ANDROID下JVM的初始化。该接口在PLAYKD_Startup之后其他接口之前调用。
参	  数：  jvm:JAVA虚拟机
            context:应用的上下文.
返 回 值：	
******************************************************************************/
KDMEDIA_API	BOOL EarlyInitAndroidObject(void *jvm, void* context);
/******************************************************************************
函 数 名：	PLAYKD_SetAudioMode
功	  能：	设置音频通道,仅android平台有效
参	  数：  bIsVoice:TRUE 表示使用VOICE通道, FALSE表示使用MEDIA通道
返 回 值：	BOOL 返回设置是否成功
******************************************************************************/
KDMEDIA_API     BOOL PLAYKD_SetAudioMode(BOOL bIsVoice);
#endif

/******************************************************************************
函 数 名：	PLAYKD_GetVersion
功	  能：	版本信息	
参	  数： 
返 回 值：	int32_t,成功返回版本信息,并打印输出各个子模块的版本信息，打印输出目标参考PLAYKD_SetLogConfig接口。
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API int32_t PLAYKD_GetVersion();


/******************************************************************************
函 数 名：	PLAYKD_SetOspParameter
功	  能：	调用OSP接口设置telnet登录模式以及用户名密码				
参	  数：  dwTelMode只可以设置为以下三个值:
			 0 (TELNET_PORT_OFF,关闭telnet端口)
   			 1 (TELNET_LOCAL_ON,仅本地端口可telnet)
			 2 (TELNET_ALL_ON,本地和远程都可以telnet)
			szUsername:用户名
			szPassword:密码
返 回 值：	BOOL 返回设置是否成功
注意事项:   若该接口不调用，Telnet只能在本地通过指定的用户名密码登录;
			若要调用，必须在PLAYKD_Startup之后立即调用。
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2016/11/22	1.0			fqr					   创建
******************************************************************************/
KDMEDIA_API BOOL  PLAYKD_SetOspParameter(int32_t dwTelMode,const char * szUsername,const char * szPassword);

/******************************************************************************
函 数 名：	PLAYKD_SetLogConfig
功	  能：	配置LOG输出,建议在PLAYKD_Startup之前调用，只开启UNILOG_ERR，UNILOG_WARNING级别，后面可以跟进需要开启INFO和DEBUG级别的LOG。
参	  数：	eTarget：LOG输出目标，TARGET_NULL、TARGET_PRINT、TARGET_TELNET、TARGET_FILE或者TARGET_LOGCAT，采用或的方式设置输出目标。
                     ANDROID默认输出到logcat,其他默认输出到TELNET.
            eLevel:  LOG输出等级控制,UNILOG_ERR，UNILOG_WARNING,UNILOG_INFO或者UNILOG_DEBUG，
                     采用或的方式控制，比如UNILOG_ERR|UNILOG_WARNING|UNILOG_INFO输出ERR、WARN、INFO级别的LOG，
                     默认输出ERR和WARN级别LOG。
            pLogPath： 如果输出目标是文件，需要填写文件路径，会输出32个LOG文件，名字为[0-31]uniplay.log,每个文件5M，文件数满后会循环写；
                       如果不是，可以为NULL。
            iFileNum: 日志文件个数，必须大于2个。填0默认32个。
            iModule：打印哪个模块的日志，目前无效，填0即可。
返 回 值：	
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2016/02/17	1.0			陈志敏					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_SetLogConfig(int iTarget,int iLevel,char* pLogPath,int iFileNum,int iModule);

/******************************************************************************
函 数 名：	PLAYKD_GetLastError
功	  能：	解码错误信息，返回错误号，支持本地文件，媒体流
参	  数：	nPort	解码对象句柄
返 回 值：	int32_t,返回错误号
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API int32_t	PLAYKD_GetLastError(int nPort);

/******************************************************************************
函 数 名：	PLAYKD_RegisterCompany
功	  能：	配置外厂商的解码适配器动态库路径。必须在PLAYKD_Startup之后立即调用，即所有的GetPort之前调用。
算法实现：
全局变量：	
参	  数：	szGAT669AdapterPath 该厂商的动态库全路径
			szCompany:厂家名，唯一名称，按照相应的命名方式
           
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL PLAYKD_RegisterCompany(const int8_t *szCompany,const int8_t *szGAT669AdapterPath);

/******************************************************************************
函 数 名：	PLAYKD_GetPort
功	  能：	根据厂家信息获取端口，szCompany == ＮＵＬＬ情况，获取国标端口。
算法实现：
全局变量：	
参	  数：	szCompany:厂家名，唯一名称，按照相应的命名方式
            bHardwareAccelerate：是否启用硬件加速。FALSE(0)：软解；TRUE（1）：自适应硬件加速；2：强制硬解（不推荐使用）。
            如果该PORT用于播放文件，建议使用不启动硬件加速。
			流模式下文件流播放，要求文件播放控制功能下，建议用软解
			pnPort：返回的解码句柄
返 回 值：	TRUE:成功，FALSE:失败
说    明：
1.WIN下目前仅INTEL显卡支持硬件加速。
2.WIN下如果启动硬件加速，需要禁止非INTEL显卡，并安装合适的驱动，不然可能会导致资源泄露。
3.IOS & LINUX只支持硬解到系统内存，不支持硬解到显存。
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL PLAYKD_GetPort(const int8_t *szCompany, BOOL bHardwareAccelerate,int *pnPort);
#define PLAYKD_CreateDecoder(p1,p2)               PLAYKD_GetPort(p1,TRUE,p2)
#define PLAYKD_CreateDecoderExt(p1,p2,p3)         PLAYKD_GetPort(p1,p2,p3)
/******************************************************************************
函 数 名：	PLAYKD_destroyDecoder 
功	  能：	销毁解码对象,支持文件，媒体流
算法实现：
全局变量：	
参	  数：	nPort：	解码对象句柄，
返 回 值：	
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API void	 PLAYKD_FreePort(int nPort);
#define PLAYKD_destroyDecoder                     PLAYKD_FreePort

/******************************************************************************
函 数 名：	PLAYKD_SetTSSampleRate
功	  能：	设置音频和视频的时间戳采样率。
参	  数：	nPort：	解码对象句柄，
			u32MediaType：媒体类型，0=第一路音频，1=视频,2=第二路音频。
            u32TimeStampSampleRate：时间戳采样率。例如视频RTP时间戳采样率为90000，音频AACLC的RTP时间戳采样率为8000、16000，
                                    如果帧信息中是毫秒时间戳，采样率设置为1000。
									该参数设置为0（不建议使用）：内部自适应。视频采样率必须是90000；如果音频流设置为自适应，必须同时存在视频流。
									该参数设置为1（不建议使用）：按帧的接收时刻打该帧时间戳。
说    明:   该接口仅媒体流下有效。该接口仅科达码流支持。
            调用该接口后，会修改KDTRawData结构体的dwRawTimeStamp变量.
            该接口必须在PLAYKD_GetPort之后调用,建议在PLAYKD_Play之前调用。
            如果音频在PLAYKD_InputAudioData或者视频在PLAYKD_InputVideoData之后时间戳采样率发生改变，在重新设置前必须先调PLAYKD_Stop，如果在录像，也必须停止录像。
            必须确保PLAYKD_SetTSSampleRate设置之后PLAYKD_InputVideoData/PLAYKD_InputAudioData携带的是相应采样率的时间戳。
            该接口可以不用调用，不调用uniplay内部音频和视频都按1000采样率计算，即时间戳都按毫秒为单位计算。
返 回 值：	TRUE:成功，FALSE:失败
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_SetTSSampleRate(int nPort, uint32_t u32MediaType,uint32_t u32TimeStampSampleRate);

/******************************************************************************
函 数 名：	PLAYKD_GetDecoderStatis 
功	  能：	统计解码信息,支持文件，媒体流,仅科达厂商的码流有效。
参	  数：	nPort：	解码对象句柄，
			pKdvDecStatis：解码信息
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
//KDMEDIA_API BOOL	 PLAYKD_GetDecoderStatis(int nPort, TDecStatis* pKdvDecStatis);

/******************************************************************************
函 数 名：	PLAYKD_GetDecoderStatisEx
功	  能：	统计解码信息,支持文件，媒体流,仅科达厂商的码流有效。
参	  数：	nPort：	解码对象句柄，
			pKdvDecStatisEx：解码信息,wStructSize参数需要设置为sizeof(TDecStatisEx)
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
******************************************************************************/
//KDMEDIA_API BOOL	 PLAYKD_GetDecoderStatisEx(int nPort, TDecStatisEx* pKdvDecStatisEx);

/************************* 文件操作 *********************************/
/******************************************************************************
函 数 名：	PLAYKD_OpenFile
功	  能：	开始准备文件播放	支持本地录像,ANDROID下，文件流播放必须是软解。
算法实现：
全局变量：	
参	  数：	nPort：	解码对象句柄，
			szfile:		本地文件路径
			nfiletype： 文件类型，默认为0表示自动探测，目前只需支持0的方式
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_OpenFile(int nPort,const int8_t* szfile, int nfiletype);
/******************************************************************************
函 数 名：	PLAYKD_CloseFile
功	  能：	停止文件播放	支持本地录像	
参	  数：	nPort：	解码对象句柄，
返 回 值：	TRUE:成功，FALSE:失败
说	  明:	PLAYKD_CloseFile之后PLAYKD_SetColor、PLAYKD_SetRotateAngle、PLAYKD_SetDisPlayRegion、
			作图回调，YUV回调，裸数据回调，都将被重置。
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_CloseFile(int nPort);
/******************************************************************************
函 数 名：	PLAYKD_GetFileHeadLen
功	  能：	获取头信息长度,目前不支持。
参	  数：	nPort：	解码对象句柄
返 回 值：	int32_t,头信息长度
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API int32_t	PLAYKD_GetFileHeadLen(int nPort);

/***************** 流操作 ***********************/
/******************************************************************************
函 数 名：	PLAYKD_SetStreamMode
功	  能：	设置流打开方式，必须在PLAYKD_OpenStream之前调用。只有外厂商支持。
参	  数：	nPort：	解码对象句柄，
			nmode:	解码模式（文件流/实时）0：实时流（默认为实时流），外厂商的实时流尽量保证实时，不考虑播放平滑。PLAYKD_CloseStream之后恢复默认模式
			                               1，文件流,录像回放时短时间内输入全部录像，该模式下先把码流写入文件
返 回 值：	TRUE:成功，FALSE:失败
说    明：  
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_SetStreamMode(int nPort,int nMode);

/******************************************************************************
函 数 名：	PLAYKD_CachedDataTime
功	  能：	设置cache buffer中数据的时长及size。该cache buffer的目的是在实时浏览时能快速的查看之前内容。
参	  数：	nPort: 解码对象句柄
			nTimeLen:	缓冲buffer数据时长，毫秒单位,取值范围[1000,60*60*1000]；nTimeLen = 0关闭cache buffer.
			nBufferlen:	缓冲区大小,以字节为单位,该参数目前无效。
返 回 值：	TRUE:成功，FALSE:失败
说    明：  1.码流切换时，SSRC必须改变。缓存的帧会丢弃。
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2017/05/25	1.0			fanqirong				创建
******************************************************************************/
KDMEDIA_API BOOL  PLAYKD_CachedDataTime(int nPort,int nTimeLen,uint32_t nBufferLen);

/******************************************************************************
函 数 名：	PLAYKD_OpenStream
功	  能：	打开流。开始准备媒体流播放，支持媒体流。 
参	  数：	nPort：	解码对象句柄，
			pHead:		文件头缓冲地址
			nHeadLen		文件头长度
			nbufferlen:	内部缓冲区大小，以字节为单位,科达取值范围是[512*1024/10,512*1024*200]
返 回 值：	TRUE:成功，FALSE:失败
说    明：  对于科达码流，如果nBufferLen取值非法，将默认设置为3M。 
            对于科达海康大华的码流，pHead和nHeadLen无效，都填NULL即可。 
            对于其他外厂商的码流，pHead需要给帧数据，nHeadLen填帧长度，直到OpenStream成功后再调其他流接口函数。
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	PLAYKD_OpenStream(int nPort, int8_t* pHead,uint32_t nHeadLen,uint32_t nBufferLen);
/******************************************************************************
函 数 名：	PLAYKD_CloseStream
功	  能：	停止媒体流播放，支持媒体流	
参	  数：	nPort：	解码对象句柄，
返 回 值：	TRUE:成功，FALSE:失败
说	  明:	PLAYKD_CloseStream之后PLAYKD_SetColor、PLAYKD_SetRotateAngle、PLAYKD_SetDisPlayRegion、
			作图回调，YUV回调，裸数据回调，都将被重置.
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_CloseStream(int nPort);
/******************************************************************************
函 数 名：	PLAYKD_InputStreamData 
功	  能：	混合流数据输入,支持媒体流,海康大华的设备码流应该调用这个接口(非线程安全)
参	  数：	nPort：	解码对象句柄，
			pVData：	去掉rtp头之后的数据信息
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_InputStreamData(int nPort,KDTRawData *pVData);
/******************************************************************************
函 数 名：	PLAYKD_InputVideoData 
功	  能：	视频es流数据输入,支持媒体流(非线程安全)
            注意：码流切换时，SSRC必须改变。码流不切换时，时间戳必须正确，不然影响显示效果和部分功能（内存录像）。时间戳循环必须在最大值后循环。
参	  数：	nPort：	解码对象句柄，
			pVData：	去掉rtp头之后视频流信息
			B帧按时间戳或者文件模式解码,不支持帧率模式

返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_InputVideoData(int nPort,KDTRawData *pVData);
/******************************************************************************
函 数 名：	PLAYKD_InputAudioData 
功	  能：	音频es流数据输入,支持媒体流(非线程安全),支持多路音频输入
            注意：码流切换时，SSRC必须改变。码流不切换时，时间戳必须正确，不然影响效果和部分功能。
参	  数：	nPort：	解码对象句柄，
			pAData：	去掉rtp头之后音频流数据
返 回 值：	TRUE:成功，FALSE:失败
说    明:   如果不带绝对时间戳，需要给KDTRawData的dwRawTimeStamp赋为0，不然会影响以时间戳播放的节奏。
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_InputAudioData(int nPort,KDTRawData *pAData);

/******************************************************************************
函 数 名：	PLAYKD_EnableMixerAudio 
功	  能：	开启/关闭混音功能(采集编码音频和播放音频拼接)，仅支持ADPCM格式,目前仅android平台下有效,此接口为科达私有接口，海康大华没有此接口
            必须在音频开启采集接口PLAYKD_OpenCaptureAudio之后调用
参	  数：	nPort：	解码对象句柄，
			bEnable	TRUE: 开启混音，FALSE:关闭混音
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL PLAYKD_EnableMixerAudio(int nPort, BOOL bEnable);
/******************************************************************************
函 数 名：	PLAYKD_NotifyRtpNTP
功	  能：	设置音视频RTCP包中一对NTP和RTP时间戳。 
全局变量：	
参	  数：	nPort,通道号
            int iStreamID, 表示是音频还是视频时间戳,1表示视频，0表示音频
			dwTimeStamp RTCP包中的RTP时间戳
			dwNTP RTCP包中的NTP时间戳
返 回 值：	u32，成功为TRUE,失败FALSE
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人		修改内容
2017/04/20	1.0			        				创建
******************************************************************************/
KDMEDIA_API BOOL PLAYKD_NotifyRtpNTP(int nPort, int iStreamID, uint32_t dwTimeStamp, uint64_t dwNTP);
/******************************************************************************
函 数 名：	PLAYKD_SyncToAudio
功	  能：	设置是否使用音视频同步。 

全局变量：	
参	  数：	nPort,通道号
            BOOL bSyncToAudio, TRUE表示开启同步，FALSE表示关闭同步 
			dwTsType表示 同步的时间戳类型 TS_SYNC_RTP_ONLY表示使用RTP同步 TS_SYNC_NTP_UNIPLY表示使用NTP同步
返 回 值：	u32，成功为TRUE,失败FALSE
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人		修改内容
2017/04/20	1.0			        				创建
******************************************************************************/
KDMEDIA_API BOOL PLAYKD_SyncToAudio(int nPort, BOOL bSyncToAudio, int dwTsType);

/*********************** 音频采集操作 ***************************************/
/******************************************************************************
函 数 名：	PLAYKD_OpenCaptureAudio 
功	  能：	开启音频采集的功能
参	  数：	nPort：	解码对象句柄，
			captionCB:音频采集的回调函数，确保回调出来的音频属性以及数据。需要填充音频的采样率，采样位数，通道数
				编码类型，缓冲地址，缓冲长度
			pFrame :音频采集以及音频返回的编码类型，如果为NULL,则内部自适应（采用PCM回调）
				pFrame可以为null，内部自适应操作，但是在回调中captionCB要判断获取相应的音频属性信息
			可以通过pFrame设置编码通道 采样率 编码码率参数,目前AACLC支持单/双通道 16k/32k/48k编码
			通过KDFrameInfo wBitRate成员可以设置编码码率,参数值是要设置的码率值除以10,比如要设置12kbps,那么这个参数的值应该是12*1000/10,
			目前支持的格式，参数如下:
			编码类型 声道数  采样率  位宽     码率
			AACLC     1/2     16K     16      48kbps
			AACLC     1/2     32K     16      72kbps
			AACLC     1/2     48K     16      128kbps		
			G722      1       16K     16      64kbps
			G7221C    1       32K     16      24kbps/32kbps/48kbps
			PCMA      1        8K     16      64kbps
			PCMU      1        8K     16      64kbps
			ADPCM     1        8K     16      40kbps
			AMR-NB    1        8K     16      4750bps/5150bps/5900bps/6700bps/7400bps/7950bps/10200bps/12200bps
			OPUS      1/2      8K     16      6kbps~510kbps
			OPUS      1/2      16K    16      6kbps~510kbps
			OPUS      1/2      48K    16      6kbps~510kbps
			context: 音频上下文用户数据
            注意：当前不支持48K、12K、24K采样率，以及双声道采集时，自适应为单声道
            pFrame内部pFrame->dwMediaType、pFrame->dwMediaEncode、pFrame->u.tAudio.wChannels、pFrame->u.tAudio.wBitWidth、pFrame->u.tAudio.dwSampleRate、
            pFrame->wBitRate必须填写，其他参数建议填写为0或NULL
返 回 值：	TRUE:成功，FALSE:失败
注    意： 该接口不支持外厂商。android平台支持不同的port 音频编码不同的格式
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/10/16	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_OpenCaptureAudio(int nPort,PCAPTIONCALLBACK captionCB,PKDFrameInfo pFrame,void* context);
#define PLAYKD_OpenCatureAudio  PLAYKD_OpenCaptureAudio

/******************************************************************************
函 数 名：	PLAYKD_SetAudCapProcess 
功	  能：	设置音频后处理功能（AGC+SPE）
参	  数：	nPort：	解码对象句柄，
			nEnableAGC:是否开启AGC增益功能
			dwAGCLevel：AGC功能等级，等级为0,1,2
			bEnableSPE：是否开启SPE去噪功能    
			dwSPELevel：SPE功能等级，等级为0,1,2,3
返 回 值：	TRUE:成功，FALSE:失败
注    意： 该接口不支持外厂商。
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/10/16	1.0			nick					创建
******************************************************************************/
//KDMEDIA_API BOOL	 PLAYKD_SetAudCapProcess(int nPort,int nEnableAGC,int dwAGCLevel,int bEnableSPE,int dwSPELevel);

/******************************************************************************
函 数 名：	PLAYKD_SetAudCapMute 
功	  能：	设置音频采集静音
参	  数：	nPort：	解码对象句柄，
			bMute：是否开启采集静音
			注意：PLAYKD_OpenCaptureAudio接口之后调
返 回 值：	TRUE:成功，FALSE:失败
注    意： 该接口不支持外厂商。
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_SetAudCapMute(int nPort,int bMute);

/******************************************************************************
函 数 名：	PLAYKD_SetAudCapVolume 
功	  能：	设置音频采集音量
参	  数：	nPort：	解码对象句柄，
			dwVolume：是否采集音量
			注意：PLAYKD_OpenCaptureAudio接口之后调，参数范围为0-255
返 回 值：	TRUE:成功，FALSE:失败
注    意： 该接口不支持外厂商。
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_SetAudCapVolume(int nPort,int dwVolume);
/******************************************************************************
函 数 名：	PLAYKD_GetAudCapMute 
功	  能：	获取采集静音状态
参	  数：	nPort：	解码对象句柄，
			bMute： 采集静音状态
            注意：PLAYKD_OpenCaptureAudio接口之后调
返 回 值：	TRUE:成功，FALSE:失败
注    意： 该接口不支持外厂商。
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_GetAudCapMute(int nPort,int *bMute);

/******************************************************************************
函 数 名：	PLAYKD_GetAudCapVolume 
功	  能：	获取音频采集音量
参	  数：	nPort：	解码对象句柄，
			dwVolume：采集音量大小
			注意：PLAYKD_OpenCaptureAudio接口之后调
返 回 值：	TRUE:成功，FALSE:失败
注    意： 该接口不支持外厂商。
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_GetAudCapVolume(int nPort,int *dwVolume);
/******************************************************************************
函 数 名：	PLAYKD_EnableCapAEC 
功	  能：	开启采集侧AEC处理,未实现
参	  数：	nPort：	解码对象句柄，
			bEnableAEC：是否开启采集侧AEC处理
			注意：PLAYKD_OpenCaptureAudio接口之后调
返 回 值：	TRUE:成功，FALSE:失败
注    意：  该接口不支持外厂商。
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_EnableCapAEC(int nPort,BOOL bEnableAEC);
/*
函 数 名：	PLAYKD_CloseCaptureAudio 
功	  能：	停止音频采集的功能
注    意： 该接口不支持外厂商。
修改记录：
参	  数：	nPort：	解码对象句柄，
日  期		版本		修改人		走读人    修改内容
2014/10/16	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_CloseCaptureAudio(int nPort);
#define PLAYKD_CloseCatureAudio PLAYKD_CloseCaptureAudio
/********************************* 录像操作 **********************************/
/******************************************************************************
函 数 名：	PLAYKD_StartLocalRecord 
功	  能：	开启本地录像，支持文件，媒体流
            该接口必须在PLAYKD_PLAY之后调用。
            如果视频或者音频的时间戳采样率或者码流发生改变时，需要重新开始一路新的录像。
参	  数：	nPort：	解码对象句柄，
			szRecFileName  录像的本地文件路径
			nRecodeType:	录像媒体类型，默认为0，自动根据文件后缀名来探测
返 回 值：	TRUE:成功，FALSE:失败
说    明：  建议使用PLAYKD_StartLocalRecordExt接口,该接口将不再维护。
            部分外厂商支持录像，支持厂商见《是否支持gat669列表.xlsx》
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_StartLocalRecord(int nPort, const int8_t* szRecFileName,int nRecodeType);

/******************************************************************************
函 数 名：	PLAYKD_StartLocalRecordExt
功	  能：	开启本地录像，支持文件，媒体流
参	  数：	nPort：	解码对象句柄，
			szRecFileName:  录像的本地文件全路径,文件名以.asf或者.mp4结尾。文件名称中勿出现特殊字符；
			nRecodeType:	录像媒体类型。
                           0：将未解码buffer数据保存为ASF/MP4文件，由传入的文件名后缀决定；
                           1：将当前CacheBuffer数据保存为ASF/MP4文件，由传入的文件名后缀决定；必须先调用PLAYKD_CachedDataTime接口，并且当前cache中有数据
			iStreamType:	要录制的码流类型，1 表示音频,2表示视频,0表示所有码流都录制,目前只支持0。
            iFileLen:		文件大小超过该值时按命名规则重录一个新的文件，单位为1K字节。
                            设置为-1时，不会切文件。文件模式必须设置为-1，即文件模式录像不支持切文件。
                            实时流录像切文件时，该值必须大于1M。 
            bFirstVideoFrame: 录像文件第一帧是否要求为视频帧，1：第一帧必须是视频帧（若一直没有视频帧，则不会产生录像文件），0：不强制第一帧必须为视频帧，默认不强制。
返 回 值：	TRUE:成功，FALSE:失败
说    明：  命名规则：若第一个文件 filename.asf，之后文件命名为filename-x.asf，（x从1到XXXXX）。
            在视频分辨率改变、压缩格式改变等 或者 音频相关参数改变等情况下，按命名规则重新生成一个文件。
            nRecodeTypew为0时，需要调用PLAYKD_StopLocalRecord来停止录制未解码buffer；
                               如果预先设置了PLAYKD_ConfigReEncode开启转码或PLAYKD_SetOsdParamEx设置水印，就录制转码录像；
                               如果已经开启转码录像，在停止录像前，设置PLAYKD_ConfigReEncode或PLAYKD_SetOsdParamEx失败；
            nRecodeTypew为1时，不需要调用PLAYKD_StopLocalRecord来停止录制Cache buffer；
            该接口必须在PLAYKD_PLAY之后调用。
            外厂商调用该接口相当于PLAYKD_StartLocalRecord，只有szRecFileName参数生效；部分外厂商支持录像，支持厂商见《是否支持gat669列表.xlsx》
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2017/05/25	1.0			fanqirong				修改
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_StartLocalRecordExt(int nPort, const char* szRecFileName,int nRecodeType,int iStreamType,int iFileLen,BOOL bFirstVideoFrame);
/******************************************************************************
函 数 名：	PLAYKD_StopLocalRecord 
功	  能：	停止本地录像，支持文件，媒体流,
            如果视频或者音频的时间戳采样率或者码流发生改变时，需要重新开始一路新的录像。
参	  数：	nPort：	解码对象句柄，
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_StopLocalRecord(int nPort);

/******************************************************************************
函 数 名：	PLAYKD_ConfigReEncode
功	  能：	启动和配置某路流的转码。该接口可以在PLAYKD_Play之后调用，音频播放的也是转码后的码流。
参	  数：	nPort：	解码对象句柄，
            pCodecInfo: 标识要转码的目标编码格式及参数；NULL为内部决定编码参数，目前默认编为H264(对于水印录像，不调该接口时重编码参数也按NULL处理)。
                        编码参数目前只用编码类型,android/ios 默认按照H264编码，不管码流是哪种编码类型；windows下支持h264、h265和MJPG，设置其他格式强制h264编码。
            iItem：     0-4位 标识转码哪路流，0 表示第一路音频，1表示视频，2表示第二路音频
                        5-8位 0软编 1硬编自适应(硬编码失败自动切换为软编码)。
                        iStreamType为视频时，码率取值范围[1-100M],宽取值范围[2-4096],高取值范围[2-2160],帧率需填为重编码前的帧率。
                        pCodecInfo->wReverse[1]=qpMax（目前不生效）；
                        pCodecInfo->wReverse[2]=enableBFrame（目前不生效）；
                        pCodecInfo->u.tVideo.strike[0]，关键帧间隔，取值范围[1-75]
                        pCodecInfo->u.tVideo.strike[1],编码质量h264有效，参考MEDIA_PROFILE_AVC_BASELINE、MEDIA_PROFILE_AVC_MAIN、MEDIA_PROFILE_AVC_HIGH
                        pCodecInfo->u.tVideo.strike[2]，编码等级，h264硬编码有效，参考MEDIA_LEVEL_AVC_1-MEDIA_LEVEL_AVC_52
返 回 值：  TRUE:成功，FALSE:失败
注    意：  配置编码参数后，录像重编码后的码流
            配置编码参数后，只有在FreePort之后重编码申请的资源才能释放
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL PLAYKD_ConfigReEncode(int nPort,PKDFrameInfo pCodecInfo,int iItem);

/******************************************************************************
函 数 名：	PLAYKD_SetReEncodeCallback
功	  能：	重编码码流回调
算法实现：
全局变量：	
参	  数：	nPort,通道号
			pFun, 函数指针
            pParam， 回调上下文
返 回 值：	成功为TRUE,失败FALSE
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人		修改内容

******************************************************************************/
KDMEDIA_API	BOOL PLAYKD_SetReEncodeCallback(int nPort,PDECCALLBACK pFun, void *pParam);

/********************************* 播放控制 **********************************/
/******************************************************************************
函 数 名：	PLAYKD_Play
功	  能：	开始解码，播放，支持媒体流，文件，再次调用的话，应该重置到初始状态,
参	  数：	nPort：	解码对象句柄，
			hWnd：		播放窗口句柄，view(安卓)，UIView(ios)，hwnd(windows),linux(XID)
			如果该窗口句柄已经被使用，需要调用PLAYKD_Stop取消使用.
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_Play(int nPort, void* hwnd);
/******************************************************************************
函 数 名：	PLAYKD_Stop
功	  能：	停止解码播放,会清空缓存
参	  数：	nPort：	解码对象句柄，
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/07/14	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_Stop(int nPort);
/******************************************************************************
函 数 名：	PLAYKD_Pause 
功	  能：	播放暂停/恢复，支持文件，媒体流(解码状态保持不变)
参	  数：	nPort：	解码对象句柄，
			bPause：	TRUE:暂停，FALSE:恢复
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL  PLAYKD_Pause(int nPort, BOOL bPause);
/******************************************************************************
函 数 名：	PLAYKD_Fast 
功	  能：  设置播放快放播放，建议由PLAYKD_SetPlaySpeed接口代替。
            每次调用将使当前播放速度加快一倍，正常速度调用此接口最多调用4次；
			要恢复正常播放调用PLAYKD_Play(),从当前位置开始正常播放；
			高清码流在高倍速播放时，由于受到解码和显示的限制，可能达不到所设置的速度。 
            软解码时，按照设置的速度，解码器输出抽帧
参	  数：	nPort：	解码对象句柄。
返 回 值：	TRUE:成功，FALSE:失败
说    明：1.支持本地录像文件和文件流（录像回放）。
          2.科达文件流（网络录像回放）必须设置为实时模式，外厂商必须设置为时间戳模式。
          3.外厂商只有海康大华支持。
          4.因机子性能的问题，可能造成达不到设置的倍速或者全帧显示卡顿的情况
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_Fast(int nPort);
/******************************************************************************
函 数 名：	PLAYKD_Slow 
功	  能：	设置播放慢放，建议由PLAYKD_SetPlaySpeed接口代替。
            每次调用将使当前播放速度慢一倍；最多调用3次；
			要恢复正常播放调用PLAYKD_Play()，从当前位置开始正常播放。 
参	  数：	nPort：	解码对象句柄，
返 回 值：	TRUE:成功，FALSE:失败
说    明：1.支持本地录像文件和文件流（录像回放）。
          2.科达文件流（网络录像回放）必须设置为实时模式，外厂商必须设置为时间戳模式。
          3.外厂商只有海康大华支持。
          4.因机子性能的问题，可能造成达不到设置的倍速或者全帧显示卡顿的情况
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_Slow(int nPort);
/******************************************************************************
函 数 名： PLAYKD_SetPlaySpeed 
功 能： 设置播放速率
        要恢复正常播放调用PLAYKD_Play(),从当前位置开始正常播放,或者设置PlaySpeed_1
        高清码流在高倍速播放时，由于受到解码和显示的限制，可能达不到所设置的速度。 
        多倍速解码时，按照设置的速度，默认抽帧显示，如果想关掉抽帧，调用PLAYKD_SetDecodeState关闭。
参 数： nPort： 解码对象句柄。
        iPlaySpeed: 播放速率，0=1/16速率,1=1/8速率,2=1/4速率,3=1/2速率,4=正常速率,5=2倍速,6=4倍速,7=8倍速,8=16倍速,
返 回 值： TRUE:成功，FALSE:失败
说    明：1.支持本地录像文件和文件流（录像回放）。
          2.科达文件流（网络录像回放）必须设置为实时模式，外厂商必须设置为时间戳模式。
          3.外厂商只有海康大华支持。
          4.因机器性能的问题，可能造成达不到设置的倍速或者全帧显示卡顿的情况
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容

**********************************************************************/
KDMEDIA_API	BOOL PLAYKD_SetPlaySpeed(int nPort, emPlaySpeed ePlayRate);
/******************************************************************************
函 数 名：	PLAYKD_OneByOne 
功	  能：	单帧前进，
            调用单帧进之前先暂停进入单帧播放状态，然后根据需要多次调用单帧进，然后调用暂停恢复退出单帧播放状态。
			该接口可以与PLAYKD_GetSourceBufferRemainEx接口使用，如果未解码缓存没数据，调该接口会返回失败。
参	  数：	nPort：	解码对象句柄，
返 回 值：	TRUE:成功，FALSE:失败
说    明：  1.支持文件，文件流（录像回放）;外厂商只有海康和大华支持。
            2.文件流下外厂商必须设置为时间戳模式，科达必须设置为实时模式。
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_OneByOne(int nPort);
/******************************************************************************
函 数 名：	PLAYKD_PlayOneBack 
功	  能：	单帧后退，只支持本地文件；必需在PLAYKD_Pause之后调用。
参	  数：	nPort：	解码对象句柄，
返 回 值：	TRUE:成功，FALSE:失败
说    明：  1.只支持文件，外厂商和科达文件流不支持。
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_PlayOneBack(int nPort);
/******************************************************************************
函 数 名： 	PLAYKD_PlaySound 
功   能：   播放声音,默认关闭，该接口需要在PLAYKD_Play之前调用，在PLAYKD_GetPort之后调用。
参   数： 	nPort： 解码对象句柄，
返 回 值： 	TRUE:成功，FALSE:失败
remark:		不能与PLAYKD_PlaySoundEx同时调用,科达当前最多支持开启16路音频
-------------------------------------------------------------------------------
修改记录：
日  期  	版本  修改人  走读人    修改内容
2014/12/05 	1.0   nick     			创建
******************************************************************************/
KDMEDIA_API BOOL  PLAYKD_PlaySound (int nPort);

/******************************************************************************
函 数 名： 	PLAYKD_PlaySoundEx 
功   能：   播放声音,默认关闭，该接口需要在PLAYKD_Play之前调用，在PLAYKD_GetPort之后调用。
参   数： 	nPort： 解码对象句柄，
			pszID:	创建设备的指针数组,NULL对应设备不创建
			nCount：创建设备个数，必须小于KD_MAX_KDAP_DEVICENUM
返 回 值： 	TRUE:成功，FALSE:失败
remark:		  每次设置新的新的GUID的时候需要先调用PLAYKD_StopSoundEx，目前只支持单路设备设置,不能与PLAYKD_PlaySound同时调用,科达当前最多支持开启16路音频
******************************************************************************/
KDMEDIA_API BOOL  PLAYKD_PlaySoundEx(int nPort, char* pszID[KD_MAX_KDAP_DEVICENUM], int nCount);

/******************************************************************************
函 数 名： 	PLAYKD_StopSound 
功 能：     关闭声音
参 数：     nPort： 解码对象句柄，
返 回 值： 	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日 期 		版本 修改人 走读人 修改内容
2014/12/05 	1.0   nick  		创建
******************************************************************************/
KDMEDIA_API BOOL PLAYKD_StopSound (int nPort);
/******************************************************************************
函 数 名：	PLAYKD_SetAudioVolume 
功	  能：	设置音量，支持文件，媒体流
参	  数：	nPort：	解码对象句柄，
			nVolume音量值 nVolume,音量的值,范围[0,0xFFFF]
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL  PLAYKD_SetAudioVolume(int nPort,int32_t wVolume);
/******************************************************************************
函 数 名：	PLAYKD_GetAudioVolume 
功	  能：	获取音量，支持文件，媒体流
参	  数：	nPort：	解码对象句柄，
返 回 值：	音量值音量的值,范围[0,0xFFFF]
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	uint32_t	 PLAYKD_GetAudioVolume(int nPort);
/******************************************************************************
函 数 名：	PLAYKD_SetAudioMutex 
功	  能：	设置声音播放模式，是否共享互斥，支持文件，媒体流，默认为共享
参	  数：	nPort：	解码对象句柄，
			bMute TRUE: 互斥,FALSE：共享默认共享
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_SetAudioMutex(int nPort, BOOL bMutex);
/******************************************************************************
函 数 名：	PLAYKD_AdjustWaveAudio 
功	  能：	改变声音波形调整WAVE波形,可以改变声音的大小只对该路其作用，支持文件，媒体流
参	  数：	nPort：	解码对象句柄，
			nCoefficient	调整的参数,范围从KD_MIN_WAVE_COEF到KD_MAX_WAVE_COEF,0是不调整
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_AdjustWaveAudio(int nPort,int32_t nCoefficient);

/******************************************************************************
函 数 名：	PLAYKD_SetAudioStream 
功	  能：	选择播放哪路音频流,如果不设置，默认播放第1路音频。
参	  数：	nPort：	解码对象句柄，
			nStreamID	音频流ID号，1:音频通道1；2：音频通道2。参考KDTRawData的wReverse[4]的注释。
返 回 值：	TRUE:成功，FALSE:失败
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_SetAudioStream(int nPort,int32_t nStreamID);

/******************************************************************************
函 数 名：	PLAYKD_SetColor 
功	  能：	设置颜色信息,支持文件，媒体流
            Android下硬解该接口不支持。WIN目前支持D3D显示时的颜色设置。
参	  数：	nPort：	解码对象句柄，
			nRegionNum :区域索引信息，为0，默认为整个视频区域
			nBrightness，nContrast，nSaturation nHue :颜色信息
			取值范围都是[0,127],默认值是64，如果全部为默认值将不进行颜色调节。
			不做颜色调节的时候显示性能最高。
返 回 值：	TRUE:成功，FALSE:失败
说    明：  调用顺序：PLAYKD_OpenStream或PLAYKD_OpenFile调用成功后
			支持对未创建的region设置颜色信息
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_SetColor(int nPort,int32_t nRegionNum,int32_t nBrightness,int32_t nContrast,int32_t nSaturation, int32_t nHue);

/******************************************************************************
函 数 名：	PLAYKD_GetColor 
功	  能：	获取颜色信息,支持文件，媒体流
            Android下硬解该接口不支持。
参	  数：	nPort：	解码对象句柄，
			nRegionNum :区域索引信息，为0，默认为整个视频区域
			nBrightness，nContrast，nSaturation nHue :颜色信息
返 回 值：	TRUE:成功，FALSE:失败
说    明:	支持对未创建的region获取颜色信息
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL  PLAYKD_GetColor(int nPort,uint32_t nRegionNum, uint32_t* pBrightness,uint32_t* pContrast,uint32_t* pSaturation,uint32_t* pHue);

/******************************************************************************
函 数 名：	PLAYKD_SetDrawMode
功	  能：	设置默认绘图模式（实际模式需要在有图像之后通过PLAYKD_GetDrawMode获取）,
            必须在PLAYKD_Startup之后PLAYKD_Play之前调用，
			PLAYKD_GetPort之前调用,只有windows系统软解支持,默认使用D3D绘图
参	  数：	nmode:		绘图模式0：D3D，1，DDRAW，2:DRAWDIB, 默认是D3D
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2015/11/30	1.0.0.2365	cxx					  创建
******************************************************************************/
KDMEDIA_API	BOOL PLAYKD_SetDrawMode(int nDrawMode);

/******************************************************************************
函 数 名：	PLAYKD_GetDrawMode
功	  能：	获取当前绘图模式,只有windows系统支持
参	  数：	nmode:		绘图模式0：D3D，1，DDRAW，2:DRAWDIB, 默认是D3D
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2015/11/30	1.0.0.2365	cxx					  创建
******************************************************************************/
KDMEDIA_API	BOOL PLAYKD_GetDrawMode(int nPort, int *pDrawMode);
/******************************************************************************
函 数 名：	PLAYKD_ConfigRenderState
功	  能：	显示参数配置。
参	  数：	iRenderItem:配置的显示选项。0：后备页面配置（可以降低内存占用）；
                                        1：平滑缩放开关（可以在小窗口上显示时提高显示效果）
                                        2：强制线性滤波（dx9模式硬解码显示部分码流为防止下方绿条不做线性滤波）
            iRenderState：当iRenderItem=0时，为后备页面大小。0：默认大小（显示器大小），1:1080P，2:720P
			              当iRenderItem=1时，为是否启动平滑缩放。0：关闭；1：开启。
			              当iRenderItem=2时，为是否强制线性滤波。0：关闭；1：开启。
返 回 值：	TRUE:成功，FALSE:失败
说    明：  该接口在PLAYKD_Play之前设置有效。
******************************************************************************/
//KDMEDIA_API	BOOL PLAYKD_ConfigRenderState(int nPort,int iRenderItem,int iRenderState);

/******************************************************************************
函 数 名：	PLAYKD_GetCurrentFrameRate 
功	  能：	获取帧率，当前播放的帧率，支持文件，媒体流
参	  数：	nPort：	解码对象句柄，
返 回 值：	返回帧率
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API uint32_t	 PLAYKD_GetCurrentFrameRate(int nPort);
/******************************************************************************
函 数 名：	PLAYKD_GetPlayedFrames 
功	  能：	获取播放总帧数，支持文件，媒体流，但是媒体流意义不大.
            第三方ASF文件获取帧数为0，采用uniplay录制的ASF和MP4文件，能获取帧数。
参	  数：	nPort：	解码对象句柄，
返 回 值：	播放总帧数
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API uint32_t	 PLAYKD_GetPlayedFrames(int nPort);
/******************************************************************************
函 数 名：	PLAYKD_GetTotalFrameNum
功	  能：	文件视频总帧数	支持文件,如果文件没打开，返回0.
参	  数：	nPort：	解码对象句柄，
返 回 值：	文件总帧数
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API uint32_t	 PLAYKD_GetTotalFrameNum(int nPort);
/******************************************************************************
函 数 名：	PLAYKD_ GetTotalTime
功	  能：	文件总时间	支持文件（毫秒单位）
参	  数：	nPort：	解码对象句柄，
返 回 值：	文件总帧数
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API uint32_t	 PLAYKD_GetTotalTime(int nPort);
/******************************************************************************
函 数 名：	PLAYKD_RevertPlay 
功	  能：	文件倒放，目前还未实现，
参	  数：	nPort：	解码对象句柄，
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_RevertPlay(int nPort);
/*****************************************************************************
函 数 名：	PLAYKD_ReversePlay 
功	  能：	网络流倒放，因为需要占用大量内存，移动平台不建议使用此接口,外厂商不支持。
            如果正放时打开音视频同步，倒放前需要关闭音视频同步
            由于倒放时内存占用较多，分辨率<=1080P时，最高支持75关键帧间隔，分辨率>1080P时，最高支持30关键帧间隔，超出部分丢弃造成倒放卡顿
参	  数：	nPort：	解码对象句柄，
            bReversePlay 是否倒放，TRUE 则切换为倒放，FALSE 则切换为正放
			pTimeStamp 返回给网传模块的帧时间戳，网传根据此时间戳定位后续要发送的数据帧
			bAllFrames 是否所有帧都显示，当前默认所有帧都显示
			iStreamMode 解码后显示节奏控制模式，1为帧率模式，2为时间戳模式，默认是帧率模式
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2018/01/9	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_ReversePlay(int nPort, BOOL bReversePlay, uint32_t *pTimeStamp, BOOL bAllFrames, int iStreamMode);
/******************************************************************************
函 数 名：	PLAYKD_SetDecodeDelay
功	  能：	设置音频和视频开始启动解码时间值和音频播放缓存最大时长 
参	  数：	uiVideoStartDecThreshold：视频开始启动解码的阈值，单位ms，取值范围0-1200ms。默认值0ms.
            uiVideoFastDecThreshold：该参数目前不支持。建议填uiVideoStartDecThreshold+1000。 
            uiAudioStartDecThreshold：音频开始启动解码的阈值，单位ms，取值范围0-1200ms。默认值200ms.建议不要填0，不然在ANDROID,LINUX下开始播放时会卡顿。
返 回 值：	TRUE:成功，FALSE:失败
说    明：  该接口只在媒体流下有效。 
            仅科达码流支持。 
             uiVideoStartDecThreshold和uiAudioStartDecThreshold设置较大值时，将延迟启动解码播放，但能提供播放的流畅度，减少播放卡顿的次数。 
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2016/02/25	1.0			陈志敏					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_SetDecodeDelay(int nPort,
                                           uint32_t uiVideoStartDecThreshold,
                                           uint32_t uiVideoFastDecThreshold,
                                           uint32_t uiAudioStartDecThreshold);
/******************************************************************************
函 数 名：	PLAYKD_SetDecoderMode 
功	  能：	设置媒体流的解码播放模式。外厂商不支持
参	  数：	nPort：	解码对象句柄，
			cDecoderMode：解码模式KdDecoderMode 0:实时模式; 1:统计帧率模式; 2:固定帧率模式（科达默认模式）; 3:时间戳模式; 4:实时均衡模式;				 
返 回 值：	TRUE:成功，FALSE:失败
说    明：仅科达码流支持，仅媒体流下支持，本地文件不支持。媒体流分实时流和文件流，文件流即保存在远程服务器上的录像。 
          必须在PLAYKD_OpenStream之后PLAYKD_Play之前调用。在PLAYKD_CloseStream之后恢复默认值。 
          统计帧率模式目前不支持。 
          实时模式为来一帧解码显示一帧。科达文件流可用该模式。
          实时均衡模式的解码播放节奏为1-2倍速之间，根据帧信息中的帧率来控制播放节奏。科达文件流可用该模式。
          固定帧率模式按帧信息中的帧率来控制解码播放节奏，科达码流会做本地未解码缓存多少进行播放平滑处理（加快/减慢播放速度）,也可能会跳帧显示，该模式均衡实时和平滑，科达实时流可用该模式。
          时间戳模式根据帧信息中的时间戳来控制解码播放节奏，科达码流会根据本地未解码缓存多少进行播放平滑处理，也可能会跳帧显示，该模式均衡实时和平滑，科达实时流可用该模式。
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_SetDecoderMode(int nPort, int32_t cDecoderMode);
/******************************************************************************
函 数 名：	PLAYKD_GetPictureSize 
功	  能：	获取显示的宽高,支持文件，媒体流。该函数获取的是刚刚播放那帧数据的长宽，因此只有当播放开始后才能获取准确的值。
算法实现：
全局变量：	
参	  数：	nPort：	解码对象句柄，
			pWidth	：	显示的宽
			pHeight	；	显示的高
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_GetPictureSize(int nPort,uint32_t* pWidth,uint32_t* pHeight);

/*
函 数 名：	PLAYKD_EnableAec
功	  能：	aec功能使能,目前该接口不支持，ANDROID默认开启AEC，WIN&LINUX默认不开启AEC.
修改记录：
参	  数：	nPort：	解码对象句柄，
			bEnable：是否开启aec功能，默认为TRUE
日  期		版本		修改人		走读人    修改内容
2014/10/16	1.0			nick					创建
******************************************************************************/
//KDMEDIA_API BOOL	 PLAYKD_EnableAec(int nPort,BOOL bEnable);
/********************************* 文件定位 **********************************/
/******************************************************************************
函 数 名：	PLAYKD_SetPlayTime
功	  能：	时间文件定位，支持文件，单位(ms)
参	  数：	nPort：	解码对象句柄，
			dwTime：	相对时间点，单位是毫秒	不支持媒体流模式
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL  PLAYKD_SetPlayTime(int nPort, uint32_t nTime);
/******************************************************************************
函 数 名：	PLAYKD_GetPlayTime 
功	  能：	文件模式下获取文件播放时间；流模式下获取播放时间，但是媒体流意义不大,单位(ms)
参	  数：	nPort：	解码对象句柄，
返 回 值：	播放时间
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API uint32_t	 PLAYKD_GetPlayTime(int nPort);
/******************************************************************************
函 数 名：	PLAYKD_SetPlayPos
功	  能：	偏移位置定位，支持文件
参	  数：	nPort：	解码对象句柄，
			fPos：		相对偏移位置点 范围为0-1.0 	不支持媒体流模式
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_SetPlayPos(int nPort, float fPos);
/******************************************************************************
函 数 名：	PLAYKD_GetPlayPos 
功	  能：	获取播放相对位置	支持文件
参	  数：	nPort：	解码对象句柄，
返 回 值：	播放相对位置
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API float PLAYKD_GetPlayPos(int nPort);
/******************************************************************************
函 数 名：	PLAYKD_ GetKeyFramePos
功	  能：	根据帧序号以及帧相对时间来获取之前或者当前绝对关键帧信息	不支持媒体流模式，目前支持大华
参	  数：	nPort：	解码对象句柄，
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_GetKeyFramePos(int nPort , int32_t	nValue, int32_t nType, PKD_FRAME_POS pFramePos);
/******************************************************************************
函 数 名：	PLAYKD_GetNextKeyFramePos 
功	  能：	根据帧序号以及帧相对时间来获取下一阵绝对关键帧信息	不支持媒体流模式，目前支持大华
参	  数：	nPort：	解码对象句柄，
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL  PLAYKD_GetNextKeyFramePos(int nPort , int32_t	nValue, int32_t nType, PKD_FRAME_POS pFramePos);
/************************************* 显示控制 ******************************/
/******************************************************************************
函 数 名：	PLAYKD_SetDisplayRegion 
功	  能：	设置或增加电子放大区域，可以做局部放大显示。
参	  数：	nPort：	解码对象句柄，
			nRegionNum :区域索引信息[0-5],ID=0是默认主屏显示区域。
			pSrcRect： 	视频的区域,填NULL为全屏,显示宽高必须大于0,以码流分辨率坐标为基准，比如需要显示1080P码流正中间960*540部分，设置参数[480,270,1440,810]。
			hDestWnd：	区域视频的显示句柄，如果不想再该窗口上显示区域，调PLAYKD_Stop/PLAYKD_SetDisplayRegion取消
			bEnable：   是否启用
返 回 值：	TRUE:成功，FALSE:失败
说    明：  1.如果bEnable为FALSE时，hDestWnd可以为NULL。 
            2.支持本地文件和媒体流。 
            3.外厂商仅海康大华支持，科达码流都支持。 
            4.Android和IOS下只能电子放大到PLAYKD_Play指定的surface上，并且只能对nRegionNum为0的显示区域进行电子放大。 
            5.对于ANDROID，hDestWnd为surfaceview，而其他的是窗口句柄的地址。 
            6.在PLAYKD_OpenStream或PLAYKD_OpenFile调用成功后调用，
			7.创建的电子放大区域会在PLAYKD_CloseStream/PLAYKD_CloseFile后删除。
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_SetDisplayRegion(int nPort,uint32_t nRegionNum, KDRECT* pSrcRect, void* hDestWnd, BOOL bEnable);
/******************************************************************************
函 数 名：	PLAYKD_RefreshPlay 
功	  能：	主动刷新区域,支持文件，媒体流；只有在播放出来图像后调用该接口才有效。(只有科达支持,调用后刷新所有Region)
参	  数：	nPort：	解码对象句柄，
			nRegionNum :区域索引信息,该参数目前无效，可填任意值。
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL  PLAYKD_RefreshPlay (int nPort,int32_t nRegionNum);
/******************************************************************************
函 数 名：	PLAYKD_VerticalSyncEnable 
功	  能：	是否开启垂直同步 只支持WINDOWS系统，软解码默认开启（提高画面流畅度），硬解码默认关闭
参	  数：	nPort：	解码对象句柄，
			bEnable 	0:关闭垂直同步
                        1：开启垂直同步
返 回 值：	TRUE:成功，FALSE:失败
注意：      调用顺序：PLAYKD_OpenStream或PLAYKD_OpenFile调用成功后
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_VerticalSyncEnable(int nPort,BOOL bEnable);
/******************************************************************************
函 数 名：	PLAYKD_SetRotateAngle 
功	  能：	显示的模式，ROTATE_0：0度旋转（正常），ROTATE_90：90度旋转，ROTATE_180：180：旋转，ROTATE_270：270旋转，默认为正常
            目前WINDOWS下软解和硬解的D3D模式支持,正常播放无旋转的时候性能最高。
算法实现：
全局变量：	
参	  数：	nPort：	解码对象句柄，
			nrotateType	；	显示模式
返 回 值：	TRUE:成功，FALSE:失败
说    明：  调用顺序：PLAYKD_OpenStream或PLAYKD_OpenFile调用成功后
			仅对PLAYKD_Play使用的窗口有效.
			外厂商不支持。
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_SetRotateAngle(int nPort, uint32_t nrotateType);

/*********************************** 抓图 *************************************/
/******************************************************************************
函 数 名：	PLAYKD_Snapshot 
功	  能：	抓拍，抓拍后的图片显示在相应的窗口上面，支持文件，媒体流，一般用于动检
            目前仅支持外厂商。
参	  数：	nPort：	解码对象句柄，
			hWnd：		显示窗口
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_Snapshot(int nPort,void *hWnd);
/******************************************************************************
函 数 名：	PLAYKD_SaveSnapshot 
功	  能：	抓拍，保存相应的类型的图片类型，支持文件，媒体流,必须在播放并给数据后才可以抓拍。
参	  数：	nPort：	解码对象句柄，
			sFileName:	图片的路径，大华必须设置为绝对路径，否则抓拍失败
			ePicType:		保存为BMP/JPEG类型
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_SaveSnapshot(int nPort,const int8_t *szPicFileName, EImageType ePicType);

/******************************************************************************
函 数 名：	PLAYKD_GetBmp 
功	  能：	抓取bmp缓存。
参	  数：	nPort：	解码对象句柄，
			pBitmap:存放BMP图像数据地址，由用户分配，不得小于bmp图像大小，即sizeof(BITMAPFILEHEADER) + sizeof(BITMAPINFOHEADER) + w * h * 4， 其中w和h分别为图像宽高
			nBufSize：申请的缓冲区大小 
			pBmpSize ：获取到的实际bmp图像大小 
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2016/09/12	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_GetBmp(int nPort,char* pBitmap, int nBufSize, int* pBmpSize);

/******************************************************************************
函 数 名：	PLAYKD_CatchResizePic 
功	  能：	抓拍，改变图片分辨率，支持文件，媒体流,必须在播放并给数据后才可以抓拍。
参	  数：	nPort：	解码对象句柄，
			sFileName:	图片的路径
			lTargetWidth:	图片的宽,必须是2的倍数，不能大于4096。
			lTargetHeight:图片的高，必须是2的倍数，不能大于2160。
			ePicType:	保存为BMP/JPEG类型
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_CatchResizePic(int nPort,const int8_t *sFileName, uint32_t lTargetWidth, uint32_t lTargetHeight, EImageType ePicfomat);
/******************************************************************************
函 数 名：PLAYKD_ConvertToBmpFile
功	 能： 在解码回调中使用，将解码后数据保存成BMP文件。
参	 数： pBuf 抓图回调函数中图像缓冲区，pbuf所指向的内容在函数里面不能被修改。

          nSize 抓图回调函数中图像的大小。 nWidth 抓图回调函数中图像宽度。
          
		  nHeight 抓图回调函数中图像高度。nType 抓图回调函数中图像类型,送入的数据支持NV12和I420,类型用FRAME_DATA_FORMAT里的定义。 
		  
		  sFileName 要保存的文件名，最好以BMP作为文件扩展名 

返 回 值：TRUE:成功，FALSE:失败
******************************************************************************/
KDMEDIA_API	BOOL PLAYKD_ConvertToBmpFile(uint8_t *pBuf,int nSize,int nWidth,int nHeight,long  nType,char * sFileName);

/******************************************************************************
函 数 名： PLAYKD_ConvertToJpegFile
功	 能：  在解码回调中使用，将解码后数据保存成JPG文件。
参	 数：  pBuf 抓图回调函数中图像缓冲区，pbuf所指向的内容在函数里面不能被修改。

           nSize 抓图回调函数中图像的大小。 nWidth 抓图回调函数中图像宽度。

           nHeight 抓图回调函数中图像高度。nType 抓图回调函数中图像类型,送入的数据支持NV12和I420，类型用FRAME_DATA_FORMAT里的定义。 
		   
		   sFileName 要保存的文件名，最好以JPG作为文件扩展名 

返 回 值：	TRUE:成功，FALSE:失败
******************************************************************************/
KDMEDIA_API	BOOL PLAYKD_ConvertToJpegFile(uint8_t *pBuf,int nSize,int nWidth,int nHeight,long  nType,char * sFileName);

/************************** 缓冲区管理 ************************************/
/******************************************************************************
函 数 名：	PLAYKD_ResetBuffer 
功	  能：	清理缓存,只支持媒体流。科达厂商在PLAYKD_Pause暂停后调才有效。
参	  数：	nPort：	解码对象句柄，
			buffertype:	缓存的类型，0：音频未解码缓存，1：视频未解码缓存，2：音频未播放缓存，3：视频未播放缓冲
返 回 值：	TRUE:成功，FALSE:失败
说    明：  1.该接口科达和外厂商都支持。
            2.清除缓存前，如果存在录像，必须先关闭录像，不然会导致无法录像。
            3.科达码流不支持“音频未解码缓存”
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_ResetBuffer(int nPort,int32_t buffertype);

/******************************************************************************
函 数 名：	PLAYKD_GetSourceBufferRemain
功	  能：	源缓冲区剩余数据大小，单位：byte
参	  数：	nPort：	解码对象句柄 
返 回 值：	剩余数据大小。
  
******************************************************************************/
KDMEDIA_API uint32_t PLAYKD_GetSourceBufferRemain(int nPort);

/******************************************************************************
函 数 名：	PLAYKD_GetSourceBufferRemainEx
功	  能：	源缓冲区剩余数据大小
参	  数：	nPort：	解码对象句柄 
            iType： Buffer类型：0:未解码视频帧数,1:cache视频帧数,2:未解码buffer已使用size，3：cache buffer已使用size 4: YUV 缓冲中数据帧数（主要用于倒播）
返 回 值：	剩余数据大小。
  
******************************************************************************/
KDMEDIA_API uint32_t PLAYKD_GetSourceBufferRemainEx(int nPort,int iType);

/******************************* 视频增强 ************************************/
/******************************************************************************
函 数 名：	PLAYKD_DenoiseFilter 
功	  能：	去噪功能,支持文件，媒体流,默认不启用,目前不支持。
参	  数：	nPort：	解码对象句柄，
			bEnable:	是否启用
			dwLevel：	去噪级别，取值范围（0-4），小于0将自适应为0，大于4将自适应为4。
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_DenoiseFilter(int nPort, BOOL  bEnable, int32_t dwLevel);
/************************* 回调函数 ******************************************/
/******************************************************************************
函 数 名：	PLAYKD_SetDrawCallBack 
功	  能：	绘图回调，支持文件，媒体流(只支持主屏，辅屏不支持)，只保留最后一次成功的回调信息,ANDROID和WIN下硬解后直接显示下不支持该接口;硬解码时，获取DC对性能影响较大。
参	  数：	nPort：	解码对象句柄，
			pFunc:		作图回调函数
			pParam：		作图回调上下文
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL  PLAYKD_SetDrawCallBack(int nPort,PDRAWCALLBACK pFunc, void *pParam);
/******************************************************************************
函 数 名：	PLAYKD_SetYUVDataCallback 
功	  能：	设置回调，获取YUV数据，支持文件，媒体流，只保留最近一次回调参数信息
参	  数：	nPort：	解码对象句柄，
			pFun：		yuv回调函数处理
			pParam：	回调上下文
返 回 值：	TRUE:成功，FALSE:失败
说    明：  YUV回调函数中不建议做过多动作，也不建议调用uniplay其他接口，不然会影响显示效果；
			如需要保存YUV数据，建议拷贝到其他内存再fwrite。
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_SetYUVDataCallback(int nPort, PDECCALLBACK pFun, void *pParam);

/******************************************************************************
函 数 名：	PLAYKD_SetDecInfoCallback 
功	  能： 设置回调，获取解码后帧信息(不包含yuv数据)，支持文件，媒体流，只保留最近一次回调参数信息
参	  数： nPort： 解码对象句柄，
			pFun： 解码后帧信息处理函数
			pParam： 回调上下文
返 回 值：	TRUE:成功，FALSE:失败
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_SetDecInfoCallback(int nPort, PDECCALLBACK pFun, void *pParam);  
/******************************************************************************
函 数 名：	PLAYKD_SetPCMDataCallback 
功	  能：	设置回调，获取pcm数据，支持文件，媒体流，只保留最近一次回调参数信息
参	  数：	nPort：	解码对象句柄，
			pFun：		pcm回调函数处理
			pParam：	回调上下文
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_SetPCMDataCallback(int nPort,PDECCALLBACK pFun, void *pParam);
/******************************************************************************
函 数 名：	PLAYKD_SetRawDataCallback 
功	  能：	设置回调，获取原始数据，支持文件，媒体流，只保留最近一次回调参数信息
参	  数：	nPort：	解码对象句柄，
			pFun：		原始回调函数处理
			pParam：	回调上下文
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_SetRawDataCallback(int nPort,PRAWDATACALLBACK pFun, void *pParam);
/******************************************************************************
函 数 名：	PLAYKD_SetEncTypeChangeCallBack 
功	  能：	设置回调，分辨率改变回调，支持文件，媒体流，只保留最近一次回调参数信息
参	  数：	nPort：	解码对象句柄，
			pFun：		分辨率改变回调函数
			pParam：	回调上下文
返 回 值：	TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API	BOOL	 PLAYKD_SetEncTypeChangeCallBack(int nPort, PENCCALLBACK pFun,void *pParam);
/******************************************************************************
函 数 名：	PLAYKD_SetFileEndCB
功	  能：	设置文件结束回调,只有文件流生效
参	  数：	cb:     文件结束回调
			context:用户上下文
			nPort:解码对象句柄
返 回 值：	
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2014/06/19	1.0			nick					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_SetFileEndCB(int nPort,PFILEENDCALLBACK cb,void* context);

/******************************************************************************
函 数 名：	PLAYKD_SetRunTimeInfoCallBack
功	  能：	注册解码错误信息回调,不能在回调函数中调用uniplay.h的接口
参	  数：	nPort,通道号
			PRunTimeInfoCBFun，错误信息
			pContext:用户上下文
返 回 值：	
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2016/07/19	1.0			    					创建
******************************************************************************/
KDMEDIA_API BOOL	 PLAYKD_SetRunTimeInfoCallBack(int32_t nPort, PRunTimeInfoCBFun pPRunTimeInfoCBFun, void *pContext);

/******************************************************************************
函 数 名：	PLAYKD_SetOsdParam
功	  能：	设置OSD贴图
算法实现：
全局变量：	
参	  数：	nPort,通道号
KDOsdParam* ptOsdParam, 显示区域,OSD缓存,第一次设置时必需有nOsdBuf和pOsdBuf信息，再次设置时允许buf为NULL，使用之前的OSD图像
			BOOL32 bOsd,TRUE时开启Osd贴图，FALSE关闭
返 回 值：	u32，成功为TRUE,失败FALSE
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人		修改内容
2016/09/06	1.0			        				创建
******************************************************************************/
KDMEDIA_API BOOL PLAYKD_SetOsdParam(int32_t nPort, KDOsdParam* ptOsdParam, BOOL bOsd);

/******************************************************************************
函 数 名：	PLAYKD_SetOsdParamEx
功	  能：	设置OSD贴图,不能与PLAYKD_SetOsdParam同时调用,只支持windows平台;科达支持抓拍和显示；外厂商只支持显示
算法实现：  1.对于窗口大小变化的情况，如果需要窗口显示水印字体自动调整保持水印布局一致，
              需要设置bAutoAdjustFont为TRUE，并传递当前窗口宽高uiWinWidth/uiWinHeight
			  bAutoAdjustFont为TRUE的情况下，如果水印字体参数变化可能导致布局变化,布局可能会不一致
			  如果不需要自动调整字体，设置bAutoAdjustFont为FALSE
			2.对于抓拍和录像，如果需要抓拍/录像的水印布局和窗口的水印布局保持一致，
			  需要设置bAutoAdjustFont为TRUE，如果水印字体参数变化可能导致布局变化,布局可能会不一致,
			  如果不需要保持布局一致则设置为FALSE
			  
全局变量：	
参	  数：	nPort,通道号
            pMode, 设置OSD绘制参数
返 回 值：	u32，成功为TRUE,失败FALSE
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人		修改内容
2017/09/21	1.0			        				创建
******************************************************************************/
KDMEDIA_API BOOL PLAYKD_SetOsdParamEx(int32_t nPort, KD_OSD_MODECONFIG* pMode);

/******************************************************************************
函 数 名：	PLAYKD_SetModuConfig
功	  能：	设置图像增强配置
算法实现：
全局变量：	
参	  数：	nPort,通道号
			int nModuFlag, PLAYKD_VIE_MODULES图像增强模块标记
			PKD_VIE_MODUCONFIG pModu，图像增强参数
			BOOL32 bEnable,TRUE时开启图像增强，FALSE关闭
返 回 值：	u32，成功为TRUE,失败FALSE
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人		修改内容
2016/12/13	1.0			        				创建
******************************************************************************/
KDMEDIA_API BOOL PLAYKD_SetModuConfig(int32_t nPort, int nModuFlag, PKD_VIE_MODUCONFIG pModu, BOOL bEnable);

/******************************************************************************
函 数 名：	PLAYKD_SetModuRegion
功	  能：	设置图像增强显示区域,暂未            实现
算法实现：
全局变量：	
参	  数：	nPort,通道号
			uint32_t nRegionNum, 图像增强区域个数 
			KDRECT *pRect,显示区域
返 回 值：	u32，成功为TRUE,失败FALSE
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人		修改内容
2016/12/13	1.0			        				创建
******************************************************************************/
KDMEDIA_API BOOL PLAYKD_SetModuRegion( int32_t nPort, uint32_t nRegionNum,	KDRECT *pRect);

/******************************************************************************
函 数 名：	PLAYKD_GetModuConfig
功	  能：	获取图像增强配置
算法实现：
全局变量：	
参	  数：	nPort,通道号
			int *dwModuFlag, 图像增强模块标记PLAYKD_VIE_MODULES
			PKD_VIE_MODUCONFIG pParaConfig,图像增强参数
返 回 值：	u32，成功为TRUE,失败FALSE
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人		修改内容
2016/12/13	1.0			        				创建
******************************************************************************/
KDMEDIA_API BOOL PLAYKD_GetModuConfig( int32_t nPort, int *dwModuFlag, PKD_VIE_MODUCONFIG pParaConfig);

/******************************************************************************
函 数 名：	PLAYKD_SetDisplayBuf
功	  能：	设置播放缓冲区最大缓冲帧数,接口在PLAYKD_OpenStream之后、PLAYKD_Play之前调用有效。 
算法实现：  通过该接口可以设置播放缓冲区（即解码后的图像缓冲区）大小，这个缓冲区直接影响播放的流畅性和延时性，在一定范围内缓冲越大越流畅，同时延时越大。nNum为1表示自适应模式，还支持设置6、15帧的缓冲区大小；其他值无效，默认为自适应模式。 
            一帧352*288图像的所需内存最小值是 352*288*3/2大约150K 。最大值是352*288*4大约405K。 
            当前只有D3D显示模式生效
全局变量：	
参	  数：	nPort,通道号
            int nNum, 播放缓冲区最大缓冲帧数，取值：1（默认，自适应播放模式）、6、15 
返 回 值：	u32，成功为TRUE,失败FALSE
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人		修改内容
2017/04/20	1.0			        				创建
******************************************************************************/
KDMEDIA_API BOOL PLAYKD_SetDisplayBuf( int32_t nPort, int nNum);

/******************************************************************************
函 数 名：	PLAYKD_GetDisplayBuf
功	  能：	获取播放缓冲区最大缓冲帧数和当前帧数。 
算法实现：  
全局变量：	
参	  数：	nPort,通道号
            int* nSumNum,播放缓冲区最大缓冲帧数
            int* nRenderNum,播放缓冲区当前缓冲帧数
返 回 值：	u32，成功为TRUE,失败FALSE
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人		修改内容
2017/04/20	1.0			        				创建
******************************************************************************/
KDMEDIA_API BOOL PLAYKD_GetDisplayBuf( int32_t nPort, int* nSumNum, int* nRenderNum);

/******************************************************************************
函 数 名： PLAYKD_SetDecodeFrameType 
功 能：    设置视频帧解码类型 
           需要先设置PLAYKD_SetDecoderMode为0实时模式，才能生效
           在PLAYKD_OpenFile/PLAYKD_OpenStream之后调用，PLAYKD_CloseFile/PLAYKD_CloseStream之后恢复默认状态
注 意： 
参 数： nPort： 解码对象句柄。
        nFrameType: 默认Decode_NORMAIL，正常解码；0[正常解码],1[只解关键帧],2[不解视频帧]
返 回 值： TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容

**********************************************************************/
KDMEDIA_API	BOOL PLAYKD_SetDecodeFrameType(int nPort, emDecodeFrameType nFrameType);

/******************************************************************************
函 数 名： PLAYKD_GetDecodeFrameType 
功 能：    获取视频帧解码类型 
注 意： 
参 数： nPort： 解码对象句柄。
        pFrameType: 默认Decode_NORMAIL，正常解码；0[正常解码],1[只解关键帧],2[不解视频帧]
返 回 值： TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容

**********************************************************************/
KDMEDIA_API	BOOL PLAYKD_GetDecodeFrameType(int nPort, emDecodeFrameType* pFrameType);

/******************************************************************************
函 数 名： PLAYKD_SetDecodeState 
功 能：    设置解码状态 
           
注 意： 
参 数： nPort： 解码对象句柄。
        nType： 功能类型。 1：倍速抽帧BOOL; 2: ID不连续是否写入视频缓存BOOL（默认不写入）3:录像流结束; 4:设置软解码线程数(TDecMultiThread)
		pValue  参数指针   比如倍速抽帧时传入BOOL类型的表示是否抽帧。
返 回 值： TRUE:成功，FALSE:失败
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容

**********************************************************************/
KDMEDIA_API	BOOL PLAYKD_SetDecodeState(int nPort, int nType,void* pValue);

/******************************************************************************
函 数 名：	KdDraw
功	  能：	绘制解码后的帧数据
参	  数：	hwnd:窗口句柄
返 回 值：	0---失败，1--成功
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人    修改内容
2016/07/19	1.0			    					创建
******************************************************************************/

#if defined(_IOS_) && defined(_LINUX_)
KDMEDIA_API int KdDraw(void* hwnd);
  KDMEDIA_API int KdDrawExt(void* hwnd,int iWidth,int iHeight);
#endif

/******************************************************************************
函 数 名：	PLAYKD_SetMrtcRecvState
功	  能：	设置网络码流接收状态，用于uniplay内部根据网络情况动态分配内存 和控制播放节奏。 
算法实现：  
全局变量：	
参	  数：	nPort,通道号
            pMrtcRecvState,网络码流状态参数
            
返 回 值：	u32，成功为TRUE,失败FALSE
-------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人		修改内容
2017/08/06	1.0			        				创建
******************************************************************************/
KDMEDIA_API  BOOL PLAYKD_SetMrtcRecvState(int nPort, TMrtcRecvState *pMrtcRecvState);
#ifdef __cplusplus
}
#endif

#endif
